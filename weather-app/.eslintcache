[{"C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\app_component\\weather.component.jsx":"4","C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\app_component\\form.component.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":3038,"mtime":1607667527571,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":899,"mtime":1607606192519,"results":"10","hashOfConfig":"7"},{"size":1095,"mtime":1607606199817,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10jfwjh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\index.js",[],["25","26"],"C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\App.js",["27"],"import React from \"react\";\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport Form from'./app_component/form.component';\n\n\nconst API_key=\"98e27832b4c2c79c69f77a649dadf8d0\";\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description: \"\",\n      error:false\n    };\n    \n\n    this.weatherIcon={\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp-273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons,id){\n    switch(true){\n      case id>=200 && id<=232:\n      this.setState({icon:this.weatherIcon.Thunderstorm});\n      break;\n      case id>=300 && id<=321:\n      this.setState({icon:this.weatherIcon.Drizzle});\n      break;\n      case id>=500 && id<=531:\n      this.setState({icon:this.weatherIcon.Rain});\n      break;\n      case id>=600 && id<=622:\n      this.setState({icon:this.weatherIcon.Snow});\n      break;\n      case id>=701 && id<=781:\n      this.setState({icon:this.weatherIcon.Atmosphere});\n      break;\n      case id>=200 && id<=232:\n      this.setState({icon:this.weatherIcon.Thunderstorm});\n      break;\n      case id===800:\n      this.setState({icon:this.weatherIcon.Clear});\n      break;\n      case id>=801 && id<=804:\n      this.setState({icon:this.weatherIcon.Clouds});\n      break;\n      default:\n        this.setState({icon:this.weatherIcon.Clouds});\n\n    }\n  }\n\ngetWeather = async(e) => {\n\ne.preventDefault();\n\nconst city = e.target.elements.city.value;\nconst country = e.target.elements.country.value;\n\nif(city && country){\n  const api_call = await fetch(\n    `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n    );\n\nconst response = await api_call.json();\n\nconsole.log(response);\n\nthis.setState({\n  city:`${response.name},${response.sys.country}`,\n  celsius:this.calCelsius(response.main.temp),\n  temp_max:this.calCelsius(response.main.temp_max),\n  temp_min:this.calCelsius(response.main.temp_min),\n  description:response.weather[0].description,\n  error:false\n});\n\nthis.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n}\nelse{\n  this.setState({error : true});\n}\n};\n\n  render(){\n    return (\n      <div className='App'>\n        <Form loadweather={this.getWeather} error ={this.state.error}/>\n        <Weather city={this.state.city} \n        country={this.state.country} \n        temp_celsius={this.state.celsius}\n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        weatherIcon={this.state.icon}/>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\app_component\\weather.component.jsx",[],["28","29"],"C:\\Users\\HP\\Desktop\\WeatherApp\\weather-app\\src\\app_component\\form.component.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":60,"column":7,"nodeType":"36","messageId":"37","endLine":62,"endColumn":13},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["40"],["41"],"no-global-assign","no-unsafe-negation"]